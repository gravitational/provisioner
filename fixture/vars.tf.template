// these variables are loaded from
// existing AWS environment and VPC

// https://www.terraform.io/docs/providers/aws/d/availability_zones.html
variable "azs" {
   default = [{{$c := counter}}{{range $idx, $az := .variables.aws.azs}}{{if call $c}}, {{end}}"{{$az}}"{{end}}]
}

// https://www.terraform.io/docs/providers/aws/d/subnet_ids.html
variable "subnets" {
   default = [{{$c := counter}}{{range $idx, $subnet := .variables.aws.subnets}}{{if call $c}}, {{end}}"{{$subnet}}"{{end}}]
}

variable "public_subnets" {
   default = [{{$c := counter}}{{range $idx, $subnet := .variables.aws.public_subnets}}{{if call $c}}, {{end}}"{{$subnet}}"{{end}}]
}

variable "aws_region" {
  default = "{{.variables.aws.region}}"
}

{{ if .variables.aws.vpc_id -}}
data "aws_internet_gateway" "default" {
  filter {
    name = "attachment.vpc-id"
    values = ["{{.variables.aws.vpc_id}}"]
  }

  filter {
    name = "attachment.state"
    values = ["available"]
  }
}

locals {
  vpc_id = "{{.variables.aws.vpc_id}}"
  internet_gateway_id = "${data.aws_internet_gateway.default.id}"
  nat_gateways = [{{$c := counter}}{{range $gateway_id := .variables.aws.nat_gateways}}{{if call $c}}, {{end}}"{{$gateway_id}}"{{end}}]
}

{{- else -}}

variable "vpc_cidr" {
  default = "{{.variables.aws.vpc_cidr}}"
}

resource "aws_vpc" "kubernetes" {
  cidr_block            = "{{.variables.aws.vpc_cidr}}"
  enable_dns_support    = true
  enable_dns_hostnames  = true
  tags                  = "${merge(local.common_tags, map())}"
}

resource "aws_eip" "nat" {
  count = "${length(var.azs)}"
  vpc   = true
}

resource "aws_internet_gateway" "kubernetes" {
  vpc_id = "{{or .variables.aws.vpc_id "${aws_vpc.kubernetes.id}"}}"
  tags   = "${merge(local.common_tags, map())}"
}

resource "aws_nat_gateway" "kubernetes" {
  count         = "${length(var.azs)}"
  allocation_id = "${element(aws_eip.nat.*.id, count.index)}"
  subnet_id     = "${element(aws_subnet.public.*.id, count.index)}"
  tags          = "${merge(local.common_tags, map())}"
  depends_on    = ["aws_subnet.public", "aws_internet_gateway.kubernetes"]
}

locals {
  vpc_id = "${aws_vpc.kubernetes.id}"
  internet_gateway_id = "${aws_internet_gateway.kubernetes.id}"
  nat_gateways = ["${aws_nat_gateway.kubernetes.*.id}"]
}
{{- end }}
