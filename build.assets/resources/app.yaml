apiVersion: bundle.gravitational.io/v2
kind: Bundle
metadata:
  name: ci
  description: |
    This is a sample gravitational app used for CI
  resourceVersion: 0.2.0-alpha
  namespace: default

license:
  enabled: false

endpoints:
  - name: "Gravity Cluster"
    description: "Admin control panel"
    selector:
      app: gravity-site
    protocol: https

providers:
  azure:
    disabled: true
  aws:
    regions:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - ap-northeast-1
      - ap-northeast-2
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ca-central-1
      - sa-east-1

installer:
  flavors:
    prompt: "Select a flavor"
    default: "one"
    items:
      - name: "one"
        description: "1 node"
        nodes:
          - profile: node
            count: 1

nodeProfiles:
# node is a hardcode in the provisioner, and must be present in order to function
  - name: node
    description: "Telekube Node"
    labels:
      role: node
#	TODO(knisbet) it appears that setting node-role.kubernetes.io to master, removes the node from the load balancer
#	which prevents gravity join from being able to reach the cluster
#	https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/service/service_controller.go#L614
#      node-role.kubernetes.io/master: "true"
    requirements:
      cpu:
        min: 1
      ram:
        min: "2GB"
      os:
        - name: centos
          versions: ["7"]
      volumes:
        - path: /var/lib/gravity
          capacity: "10GB"
          filesystems: ["xfs", "ext4"]
    providers:
      aws:
        instanceTypes:
          - c4.large
          - c4.xlarge
          - c4.2xlarge
          - c4.4xlarge
          - c4.8xlarge
          - m4.large
          - m4.xlarge
          - m4.2xlarge
          - m4.4xlarge
          - m4.10xlarge
          - m4.16xlarge
          - t2.medium
          - t2.large
          - t2.xlarge
          - t2.2xlarge
# knode is a hardcode in the provisioner, and must be present for the provisioner to function
  - name: knode
    description: "Telekube Node"
    labels:
      role: node
#       TODO(knisbet) it appears that setting node-role.kubernetes.io to master, removes the node from the load balancer
#       which prevents gravity join from being able to reach the cluster
#       https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/service/service_controller.go#L614
#      node-role.kubernetes.io/master: "true"
    requirements:
      cpu:
        min: 1
      ram:
        min: "2GB"
      os:
        - name: centos
          versions: ["7"]
      volumes:
        - path: /var/lib/gravity
          capacity: "10GB"
          filesystems: ["xfs", "ext4"]
    providers:
      aws:
        instanceTypes:
          - c4.large
          - c4.xlarge
          - c4.2xlarge
          - c4.4xlarge
          - c4.8xlarge
          - m4.large
          - m4.xlarge
          - m4.2xlarge
          - m4.4xlarge
          - m4.10xlarge
          - m4.16xlarge
          - t2.medium
          - t2.large
          - t2.xlarge
          - t2.2xlarge

systemOptions:
  docker:
    storageDriver: overlay2
  runtime:
    version: 5.0.0-alpha.6

hooks:
  clusterProvision:
    job: file://clusterProvision.yaml
  clusterDeprovision:
    job: file://clusterDeprovision.yaml
  nodesProvision:
    job: file://nodesProvision.yaml
  nodesDeprovision:
    job: file://nodesDeprovision.yaml
